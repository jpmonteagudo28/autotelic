[
  {
    "objectID": "learn/epi/index.html#epi-by-design",
    "href": "learn/epi/index.html#epi-by-design",
    "title": "Epi & Stats",
    "section": "Epi by Design",
    "text": "Epi by Design\n\n\n    \n    \n                  \n            Jun, 24\n        \n        \n            Deault Title Here\n\n            \n\n            Subtitle Here\n            \n            \n        \n        \n        \n    \n    \n\n\nNo matching items"
  },
  {
    "objectID": "learn/advanceR/index.html#advanced-r",
    "href": "learn/advanceR/index.html#advanced-r",
    "title": "Programming",
    "section": "Advanced R",
    "text": "Advanced R\n\n\n    \n    \n                  \n            Jun, 24\n        \n        \n            Chapters 1–4\n\n            \n\n            \n            \n            \n        \n        \n        \n        \n            \n                What's in a name?\n            \n                 / That which we call a rose\n            \n                 / by any other name would smell as sweet.\n            \n        \n        \n    \n    \n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "autotelic",
    "section": "",
    "text": "A site dedicated to my programming and statistics learning journey where I’ll record what I read, summarize, explain and learn from a wide variety of topics all related to programming, statistics, and occasionally, some other subjects.\nThe goal is that, within a 12-month period, I’ll be able to learn from three good, solid books and use this new found knowledge in my day–to–day life to create and improve something, however small it is. At the end of the year, I should see the tangible fruit of my labors, either virtually on the “interweb” or in physical form."
  },
  {
    "objectID": "learn/art/index.html#the-art-of-calligraphy",
    "href": "learn/art/index.html#the-art-of-calligraphy",
    "title": "Arts & Thangs",
    "section": "The Art of Calligraphy",
    "text": "The Art of Calligraphy\n\n\n    \n    \n                  \n            Jun, 24\n        \n        \n            Deault Title Here\n\n            \n\n            Subtitle Here\n            \n            \n        \n        \n        \n    \n    \n\n\nNo matching items"
  },
  {
    "objectID": "learn/advanceR/advanceR/chap1_4/index.html",
    "href": "learn/advanceR/advanceR/chap1_4/index.html",
    "title": "Chapters 1–4",
    "section": "",
    "text": "If you’d like to know your way around the programming environment, you first have to understand how R’s OOP works. Binding is one of the most basic functions performed in R.So let’s start there:\n\nx &lt;- (1:6)\nprint(x)\n## [1] 1 2 3 4 5 6\n\nThis code is creating an object, a vector with 6 elements. This object is then bound to the name x. R assigns values to a name, and not vice-versa. The name is acts as a reference to the values 1 through 6. This concept is clearly demonstrated by binding the existing values in x to y. This action doesn’t create a copy of (1:6), but binds the values to a new name y. This doesn’t mean that you won’t see two names in your environment, instead, it shows that y is also referencing the sames values, (1:6).\n\ny &lt;- x\n\nHow do we know this? Well, we can access the object’s identifier to make sure both x and y point to the same object (1:6).\n\nprint(lobstr::obj_addr(x))\n## [1] \"0x26ed68f2d38\"\nprint(lobstr::obj_addr(y))\n## [1] \"0x26ed68f2d38\"\n\n## Another example of this behavior\nprint(lobstr::obj_addr(mean))\n## [1] \"0x26ed2bedc98\"\nprint(lobstr::obj_addr(base::mean))\n## [1] \"0x26ed2bedc98\"\nprint(lobstr::obj_addr(match.fun(\"mean\")))\n## [1] \"0x26ed2bedc98\"\n\n\nThe naming possibilities seem endless, but they’re actually limited. Always use syntactic names that consists of letters, digits, . and _. You can’t begin with _ or a digit, and can’t use any reserved words like TRUE, FALSE,NULL,if, and function1. To override these rules, you have to surround the name in back–ticks.\n\n`function` &lt;- c(1:3,\"advance\",\"R\")\nprint(`function`)\n## [1] \"1\"       \"2\"       \"3\"       \"advance\" \"R\"\n\n`if` &lt;- 1e+7\nprint(`if`)\n## [1] 1e+07\n\nR will automatically convert non–syntactic names"
  },
  {
    "objectID": "learn/advanceR/advanceR/chap1_4/index.html#whats-in-a-name",
    "href": "learn/advanceR/advanceR/chap1_4/index.html#whats-in-a-name",
    "title": "Chapters 1–4",
    "section": "",
    "text": "If you’d like to know your way around the programming environment, you first have to understand how R’s OOP works. Binding is one of the most basic functions performed in R.So let’s start there:\n\nx &lt;- (1:6)\nprint(x)\n## [1] 1 2 3 4 5 6\n\nThis code is creating an object, a vector with 6 elements. This object is then bound to the name x. R assigns values to a name, and not vice-versa. The name is acts as a reference to the values 1 through 6. This concept is clearly demonstrated by binding the existing values in x to y. This action doesn’t create a copy of (1:6), but binds the values to a new name y. This doesn’t mean that you won’t see two names in your environment, instead, it shows that y is also referencing the sames values, (1:6).\n\ny &lt;- x\n\nHow do we know this? Well, we can access the object’s identifier to make sure both x and y point to the same object (1:6).\n\nprint(lobstr::obj_addr(x))\n## [1] \"0x26ed68f2d38\"\nprint(lobstr::obj_addr(y))\n## [1] \"0x26ed68f2d38\"\n\n## Another example of this behavior\nprint(lobstr::obj_addr(mean))\n## [1] \"0x26ed2bedc98\"\nprint(lobstr::obj_addr(base::mean))\n## [1] \"0x26ed2bedc98\"\nprint(lobstr::obj_addr(match.fun(\"mean\")))\n## [1] \"0x26ed2bedc98\"\n\n\nThe naming possibilities seem endless, but they’re actually limited. Always use syntactic names that consists of letters, digits, . and _. You can’t begin with _ or a digit, and can’t use any reserved words like TRUE, FALSE,NULL,if, and function1. To override these rules, you have to surround the name in back–ticks.\n\n`function` &lt;- c(1:3,\"advance\",\"R\")\nprint(`function`)\n## [1] \"1\"       \"2\"       \"3\"       \"advance\" \"R\"\n\n`if` &lt;- 1e+7\nprint(`if`)\n## [1] 1e+07\n\nR will automatically convert non–syntactic names"
  },
  {
    "objectID": "learn/advanceR/advanceR/chap1_4/index.html#footnotes",
    "href": "learn/advanceR/advanceR/chap1_4/index.html#footnotes",
    "title": "Chapters 1–4",
    "section": "Footnotes",
    "text": "Footnotes\n\nCheck out the complete list in ?Reserved↩︎"
  }
]